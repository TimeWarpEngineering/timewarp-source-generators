<Project>
  <!-- Set common properties regarding assembly information and nuget packages -->

  <PropertyGroup>
    <Authors>Steven T. Cramer</Authors>
    <Product>TimeWarp.SourceGenerators</Product>
    <PackageVersion>1.0.0-alpha.8+9.0.100</PackageVersion>
    <PackageProjectUrl>https://timewarpengineering.github.io/timewarp-source-generators/</PackageProjectUrl>
    <PackageTags>TimeWarp; Source Generator;SourceGenerators; Delegate</PackageTags>
    <PackageIcon>Logo.png</PackageIcon>
    <RepositoryUrl>https://github.com/TimeWarpEngineering/timewarp-source-generators.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageLicenseExpression>Unlicense</PackageLicenseExpression>
    <PackageReleaseNotes>
      For detailed release notes and changelog, please visit: https://github.com/TimeWarpEngineering/timewarp-source-generators/releases
    </PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <ContentTargetFolders>contentFiles</ContentTargetFolders>
  </PropertyGroup>

  <!-- Deterministic Builds  https://devblogs.microsoft.com/dotnet/producing-packages-with-source-link/#deterministic-builds -->
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <NoWarn>CS7035;NU1503;1503;1591</NoWarn>
    <Nullable>enable</Nullable>
    <TargetFramework>net9.0</TargetFramework>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/ supports caching of nugets in CI builds -->
  <PropertyGroup>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <RestoreLockedMode Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreLockedMode>
  </PropertyGroup>

  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <!--This is to add the CommitDate and CommitHash to your assemblyinfo -->
  <Target Name="SetAssemblyMetaData" BeforeTargets="PreBuildEvent" >
    <Exec Command="git log -1 --format=%%ct" ConsoleToMSBuild="true" Condition="'$(OS)' == 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <Exec Command="git log -1 --format=%ct" ConsoleToMSBuild="true" Condition="'$(OS)' != 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <Exec Command="pwsh -ExecutionPolicy Bypass -NoProfile -File &quot;$(MSBuildThisFileDirectory)ConvertTimestamp.ps1&quot; -GitCommitTimestamp $(GitCommitTimestamp)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="CommitDate"/>
    </Exec>
    <PropertyGroup>
      <!-- In Visual Studio the below line crashes if they fix VS then we can use this and no need for the powershell script -->
      <!--<LastCommitDate>$([System.DateTime]::UnixEpoch.AddSeconds($(GitCommitTimestamp)).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssK"))</LastCommitDate>-->
    </PropertyGroup>
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitDate</_Parameter1>
        <_Parameter2>$(LastCommitDate)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>

  <!--  Common analyzers and code fixes-->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
  </ItemGroup>

</Project>
