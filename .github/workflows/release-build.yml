name: Build and Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'Source/**'
      - 'Tests/**'
      - '.github/workflows/release-build.yml'
      - 'Directory.Build.props'
      - '*.props'
      - '*.targets'
  release:
    types: [created]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_AUTH_TOKEN: ${{secrets.PUBLISH_TO_NUGET_ORG}}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Run BuildNuGets.ps1
        run: |
          .\build-nugets.ps1

      - name: Publish TimeWarp.SourceGenerators
        run: |
          cd Source/TimeWarp.SourceGenerators/bin/Packages
          dotnet nuget push TimeWarp.SourceGenerators.*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{secrets.PUBLISH_TO_NUGET_ORG}}

      - run: echo "🍏 This job's status is ${{ job.status }}."
